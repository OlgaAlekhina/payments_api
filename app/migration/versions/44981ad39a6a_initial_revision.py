"""Initial revision

Revision ID: 44981ad39a6a
Revises: 
Create Date: 2025-04-13 21:38:47.230699

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '44981ad39a6a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    user_table = op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=30), nullable=False),
    sa.Column('full_name', sa.String(length=30), nullable=False),
    sa.Column('password', sa.String(length=30), nullable=False),
    sa.Column('is_user', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('is_admin', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    account_table = op.create_table('account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('balance', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )

    # вставляем тестовые данные в таблицу user
    op.bulk_insert(user_table,
   [
       {'email': 'test_user@mail.ru', 'password': 'testpassword', 'full_name': 'Alex'},
       {'email': 'admin@mail.ru', 'password': 'somepassword', 'full_name': 'Peter', 'is_user': False, 'is_admin': True},
   ],
   multiinsert=False
   )

    # получаем id созданного пользователя
    connection = op.get_bind()
    r = connection.execute(user_table.select().where(user_table.c.email == 'test_user@mail.ru')).first()
    user_id = r.id

    # вставляем данные в таблицу account
    op.bulk_insert(account_table,
   [
       {'balance': 0, 'user_id': user_id},
   ]
   )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payment')
    op.drop_table('account')
    op.drop_table('user')
    # ### end Alembic commands ###
